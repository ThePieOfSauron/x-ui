name: Release X-ui
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: X-UI ${{ github.ref }}
          draft: true
          prerelease: false
          
  build-and-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      
      - name: Cache Xray binaries
        uses: actions/cache@v3
        id: cache-xray
        with:
          path: xray_cache
          key: xray-binaries-${{ hashFiles('package.sh') }}
      
      - name: Create cache directory
        if: steps.cache-xray.outputs.cache-hit != 'true'
        run: mkdir -p xray_cache
      
      - name: Build packages
        run: |
          chmod +x package.sh
          ./package.sh
          
      - name: Upload Linux AMD64 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./releases/x-ui-linux-amd64-*.tar.gz
          asset_name: x-ui-linux-amd64.tar.gz
          asset_content_type: application/gzip
          
      - name: Upload Linux ARM64 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./releases/x-ui-linux-arm64-*.tar.gz
          asset_name: x-ui-linux-arm64.tar.gz
          asset_content_type: application/gzip
          
      - name: Upload Windows AMD64 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./releases/x-ui-windows-amd64-*.zip
          asset_name: x-ui-windows-amd64.zip
          asset_content_type: application/zip